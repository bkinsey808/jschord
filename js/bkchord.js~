var $bkc = {};

$bkc.notes = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];
$bkc.degrees = ['PU', 'b2', '2', 'b3', '3', '4', 'b5', '5', 'b6', '6', 'b7', '7'];

$bkc.scit = {
    "PU": {
	degrees: "", 
	names: [
	    "Perfect Unison"
	]
    },
    "-2": {
	degrees: "b2",
	modes: {
	    "b2": "7"
        },
	names: [
	    "Minor Second"
	]
    }, 
    "M2": {
	degrees: "2",
	primary: true,
	modes: {
	    "2": "b7"
        },
	names: [
	    "Major Second"
	]
    }, 
    "-3": {
	degrees: "b3",
	primary: true,
	modes: {
	    "b3": "6"
        },
	names: [
	    "Minor Third"
	]
    }, 
    "3": {
	degrees: "3",
	primary: true,
	modes: {
	    "3": "b6"
        },
	names: [
	    "Major Third"
	]
    }, 
    "P4": {
	degrees: "4",
	primary: false,
	modes: {
	    "4": "5"
        },
	names: [
	    "Perfect Fourth"
	]
    }, 
    "T": {
	degrees: "T",
	primary: true,
	modes: {
	    "T": "b5"
        },
	names: [
	    "Tritone"
	]
    }, 
    "P5": {
	degrees: "5",
	primary: true,
	modes: {
	    "T": "b5"
        },
	names: [
	    "Perfect Fifth"
	]
    }, 
    "-6": {
	degrees: "b6",
	primary: false,
	modes: {
	    "b6": "3"
        },
	names: [
	    "Minor Sixth"
	]
    }, 
    "6": {
	degrees: "6",
	primary: false,
	modes: {
	    "6": "b3"
        },
	names: [
	    "Major Sixth"
	]
    }, 
    "-7": {
	degrees: "b7",
	primary: false,
	modes: {
	    "b7": "2"
        },
	names: [
	    "Minor Seventh"
	]
    }, 
    "7": {
	degrees: "7",
	primary: false,
	modes: {
	    "7": "b2"
        },
	names: [
	    "Major Seventh"
	]
    },
    "M": {
	degrees: "3 5",
	primary: false,
	modes: {
	    "3": "",
	    "5": ""
        },
	names: [
	    "Major Seventh"
	]
    }
}

$bkc.get_scit_modes_from_scit = function(scit) {
    degrees_array = $bkc.scits[scit].degrees.split(' ');
    var modes = {}
    for (degree in degrees) {
	modes['degree'] = $bkc.get_mode_at_degree_from_scit(scit, degree);
    }
    return modes;
};


$bkc.get_mode_at_degree_from_scit(scit, degree) {
    degrees_array = $bkc.scits[scit].degrees.split(' ');
    var degree_number_array = $bkc.get_degree_number_array_from_scit(scit);
};

$bkc.get_degree_number_array_from_scit = function(scit) {
    degrees_array = $bkc.scits[scit].degrees.split(' ');
    for (degree in degrees_array) {
    }
};

 
$bkc.instruments = {};
$bkc.instruments['Ukulele'] = ['1G0 1C0 1E0 1A0'];
$bkc.instruments['Guitar'] = ['01E 01A 01D 1G0 1B0 1E0'];


var position = '0 2 2 2';

$bkc.get_notes_for_position = function(instrument, position) {
   var i = 0;
   var position_array = position.split(' ');
   var notes_for_position = [];
   for (var fret in position_array) {
	var string_def = $bkc.get_string_def_from_position_and_instrument(i, position);
	notes_for_position[i] = $bkc.get_note_from_fret_and_string_def(fret, string_def);
	i++;
    }
    return notes_for_position;
};

$bkc.get_note_from_fret_and_string_def(fret, string_def) {
    var match = string_def.match(/(\d+)(C|C#|D|D#|E|F|F#|G|G#|A|A#|B)(\d+)/);
    var start_fret = match[1];
    var note_letter = match[2];
    var octave = match[3];
    var note_number = $bkc.get_note_number_from_octave_and_note_letter(octave, note_letter);
    var new_note_number = note_number + (octabe * 12);
    var note = $bkc.get_note_from_note_number(note_number);
};

$bkc.get_note_from_note_number = function(note_number) {
    var octave = Math.floor(note_number / 12);
    var note_letter = $bkc.notes[note_number % 12];
    return note_letter + octave;
};

$bkc.get_note_number_from_octave_and_note_letter(octave, note_letter) {
    for (var i = 0; i < 12; i++) {
	if ($bkc.note[i] == note_letter) return octave * i;
    }
}

$bkc.get_string_def_from_position_and_instrument(position, instrument) {
    var string_def_array = instrument.split(' ');
    return string_def_array(position);
};

/*
oct1 note1 fret oct2 note2
0    0     0    0    0
0    0     12   1    0
0    0     13   1    1
0    11    1    2    0
oct2  = oct1  + int(fret/12)
note2 = (note1 + fret) % 12 
*/